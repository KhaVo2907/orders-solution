{"version":3,"sources":["webpack:///./src/app/order/add-order/add-order.component.css","webpack:///./src/app/order/add-order/add-order.component.html","webpack:///./src/app/order/add-order/add-order.component.ts","webpack:///./src/app/order/order-edit/order-edit.component.css","webpack:///./src/app/order/order-edit/order-edit.component.html","webpack:///./src/app/order/order-edit/order-edit.component.ts","webpack:///./src/app/order/order-routing.module.ts","webpack:///./src/app/order/order.module.ts","webpack:///./src/app/order/order.service.ts","webpack:///./src/app/order/orders/orders.component.css","webpack:///./src/app/order/orders/orders.component.html","webpack:///./src/app/order/orders/orders.component.ts"],"names":[],"mappings":"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","file":"order-order-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around start\\\" class=\\\"container-top\\\">\\n  <div fxFlex=\\\"60%\\\">\\n    <form [formGroup]=\\\"addValueForm\\\" (ngSubmit)=\\\"add()\\\">\\n      <mat-card>\\n        <mat-card-header>Create Order</mat-card-header>\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\n            <mat-label>number</mat-label>\\n            <input matInput placeholder=\\\"number\\\" formControlName=\\\"number\\\">\\n            <mat-icon matSuffix>format_list_numbered_rtl</mat-icon>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\n            <mat-label>description</mat-label>\\n            <input matInput placeholder=\\\"description\\\" formControlName=\\\"description\\\">\\n            <mat-icon matSuffix>description</mat-icon>\\n          </mat-form-field>\\n          <mat-card-actions fxLayout=\\\"column\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">\\n              Submit\\n            </button>\\n          </mat-card-actions>\\n        </mat-card-content>\\n      </mat-card>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { OrderService } from '../order.service';\nimport { Order } from 'src/app/shared/interfaces/order';\nimport { PaymentService } from 'src/app/payment/payment.service';\nimport { ObjectHelper } from 'src/app/shared/object-helpers';\n\n@Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css']\n})\nexport class AddOrderComponent implements OnInit {\n\n  addValueForm: FormGroup = new FormGroup({});\n\n  constructor(private orderService: OrderService, private paymentService: PaymentService,\n    private router: Router,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.addValueForm = this.formBuilder.group({\n      number: [''],\n      description: ['']\n    });\n  }\n\n  add(): void {\n    const number = this.addValueForm.get('number').value;\n    const description = this.addValueForm.get('description').value;\n\n    const newOrder: Order = {\n      number: number,\n      description: description,\n      status: status,\n      id: ''\n    };\n\n    this.orderService.addOrder(newOrder)\n      .subscribe(\n        data => {\n          this.processOrder(data);\n        }\n      );\n  }\n\n  processOrder(order: any) {\n    const payment = {\n      order: {\n        id: order.data._id\n      }\n    };\n    this.paymentService.add(payment).subscribe(data => {\n      if (data.data && data.data.status === 'declined') {\n        data.data.status = 'canceled';\n      } else if (data.data && data.data.status === 'confirmed') {\n        data.data.status = 'confirmed';\n      }\n      this.orderService.updateOrder(data.data).subscribe(result => {\n        this.router.navigate(['/orders']);\n      });\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- Card w/ Name, Dropdown for favorite, List w/ book names -->\\n<div fxLayout=\\\"column\\\"\\n     fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxLayout=\\\"row\\\">\\n   <div fxFlex=\\\"50%\\\" fxFlexOffset=\\\"30%\\\">\\n    <h2>User</h2>\\n\\n    <!-- Add to reading -->\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Favorite food\\\">\\n        <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\n            {{food.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <!-- Add favorite -->\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Favorite food\\\">\\n        <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\n            {{food.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-list>\\n      <h4 mat-subheader>Reading List</h4>\\n    <mat-list-item>\\n      <mat-icon mat-list-icon>book</mat-icon>\\n      <h4 mat-line>Title</h4>\\n      <p mat-line class=\\\"top-spacer\\\">Author: </p>\\n      <p mat-line class=\\\"top-spacer\\\">Year: </p>\\n     </mat-list-item>\\n    </mat-list>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!-- Card w/ Name, Dropdown for favorite, Show reading list -->\\n<!-- <div fxLayout=\\\"column\\\"\\n     fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxLayout=\\\"row\\\">\\n   <div fxFlex=\\\"50%\\\" fxFlexOffset=\\\"30%\\\">\\n    <h2>{{user?.name}}</h2>\\n\\n    <form (ngSubmit)=\\\"saveBook(selectedBook)\\\">\\n    <mat-form-field>\\n        <mat-select placeholder=\\\"Add to Reading\\\" [(ngModel)]=\\\"selectedBook\\\" name=\\\"book\\\">\\n          <mat-option *ngFor=\\\"let book of books\\\" [value]=\\\"book.id\\\">{{book.title}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <div class=\\\"button-row\\\" style=\\\"margin-left: 10px;\\\">\\n        <button mat-raised-button\\n                color=\\\"primary\\\"\\n                class=\\\"button-margin-btm\\\">Submit</button>\\n      </div>\\n    </form>\\n\\n    <form (ngSubmit)=\\\"saveFavorite(selectedFav)\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Favorite Book\\\" [(ngModel)]=\\\"selectedFav\\\" name=\\\"book\\\">\\n        <mat-option *ngFor=\\\"let book of books\\\" [value]=\\\"book.title\\\">\\n          {{book.title}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div class=\\\"button-row\\\" style=\\\"margin-left: 10px;\\\">\\n      <button mat-raised-button\\n              color=\\\"primary\\\"\\n              class=\\\"button-margin-btm\\\">Submit</button>\\n      </div>\\n    </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div fxLayout=\\\"row\\\"\\n  fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxFlex=\\\"90%\\\">\\n    <mat-list>\\n      <h4 mat-subheader>Favorite</h4>\\n    <mat-list-item>\\n      <mat-icon mat-list-icon>book</mat-icon>\\n      <h4 mat-line>{{favorite?.title}}</h4>\\n     </mat-list-item>\\n    </mat-list>\\n  </div>\\n</div>\\n\\n<div fxLayout=\\\"row\\\"\\n  fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxFlex=\\\"90%\\\">\\n    <mat-list>\\n      <h4 mat-subheader>Reading List</h4>\\n    <mat-list-item *ngFor=\\\"let reading of readingList\\\">\\n      <mat-icon mat-list-icon>book</mat-icon>\\n      <h4 mat-line>{{reading.title}}</h4>\\n      <p mat-line class=\\\"top-spacer\\\">Author: {{reading.author}}</p>\\n     </mat-list-item>\\n    </mat-list>\\n  </div>\\n</div> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from '../order.service';\nimport { Order } from 'src/app/shared/interfaces/order';\n\n@Component({\n  selector: 'app-order-edit',\n  templateUrl: './order-edit.component.html',\n  styleUrls: ['./order-edit.component.css']\n})\nexport class OrderEditComponent implements OnInit {\n  foods: any = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' }\n  ];\n\n  selectedBook: any;\n  selectedFav: any;\n  order: Order;\n  readingList: {};\n  favorite: any;\n\n  constructor(private orderService: OrderService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // const param = +this.route.snapshot.paramMap.get('id');\n    // if (param) {\n    //   console.log(param);\n    //   const id = param;\n    //   this.getOrder(id);\n    // }\n    // this.getBooks();\n  }\n\n  getOrder(id: number) {\n    this.orderService.getOrderDetails(id)\n      .subscribe(\n        (results: Order) => {\n          this.order = results;\n        }\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrdersComponent } from './orders/orders.component';\nimport { AddOrderComponent } from './add-order/add-order.component';\nimport { OrderEditComponent } from './order-edit/order-edit.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  pathMatch: 'full',\n  component: OrdersComponent\n}, {\n  path: 'add-order',\n  pathMatch: 'full',\n  component: AddOrderComponent\n}, {\n  path: 'edit-order',\n  // path: ':id',\n  pathMatch: 'full',\n  component: OrderEditComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from '../shared/material.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderRoutingModule } from './order-routing.module';\nimport { OrderEditComponent } from './order-edit/order-edit.component';\nimport { AddOrderComponent } from './add-order/add-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    SharedModule,\n    OrderRoutingModule\n  ],\n  declarations: [OrdersComponent, OrderEditComponent, AddOrderComponent]\n})\nexport class OrderModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { Order } from '../shared/interfaces/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  private API = 'http://localhost:4000/orders';\n\n  constructor(private http: HttpClient) { }\n\n  getOrders(): Observable<Order[]> {\n    return this\n      .http\n      .get<Order[]>(`${this.API}`)\n      .pipe(\n        tap(data => console.log(JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  getOrderDetails(id: number): Observable<Order> {\n    return this\n      .http\n      .get<Order>(`${this.API}/${id}`)\n      .pipe(\n        tap(data => console.log(JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  addOrder(order: Order): Observable<Order> {\n    return this\n      .http\n      .post<Order>(`${this.API}`, order)\n      .pipe(\n        tap(data => console.log(JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  updateOrder(order: Order): Observable<Order> {\n    return this\n      .http\n      .put<Order>(`${this.API}/update/${order.id}`, order)\n      .pipe(\n        tap(data => console.log(JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(res: HttpErrorResponse) {\n    console.error(res);\n    return throwError(res.error || 'Server error');\n  }\n\n}\n","module.exports = \".mat-list-icon {\\r\\n  color: rgba(26, 111, 209, 0.54);\\r\\n}\\r\\n\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxFlex=\\\"90%\\\">\\n    <mat-list>\\n      <h2 mat-subheader>Orders</h2>\\n      <mat-list-item *ngFor=\\\"let order of orders\\\">\\n        <h4 mat-line>{{order._id}}</h4>\\n        <h4 mat-line>Number: {{order.number}}</h4>\\n        <h4 mat-line>Description: {{order.description}}</h4>\\n        <h4 mat-line>Status: {{order.status}}</h4>\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../order.service';\nimport { Order } from 'src/app/shared/interfaces/order';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orders: Order[];\n\n  constructor(private orderService: OrderService) { }\n\n  ngOnInit() {\n    this.allOrders();\n  }\n\n  allOrders() {\n    this.orderService.getOrders()\n      .subscribe(\n        (res: any) => this.orders = res.data\n      );\n  }\n}\n"],"sourceRoot":""}