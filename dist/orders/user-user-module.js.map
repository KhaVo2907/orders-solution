{"version":3,"sources":["webpack:///./src/app/user/add-user/add-user.component.css","webpack:///./src/app/user/add-user/add-user.component.html","webpack:///./src/app/user/add-user/add-user.component.ts","webpack:///./src/app/user/user-edit/user-edit.component.css","webpack:///./src/app/user/user-edit/user-edit.component.html","webpack:///./src/app/user/user-edit/user-edit.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.service.ts","webpack:///./src/app/user/users/users.component.css","webpack:///./src/app/user/users/users.component.html","webpack:///./src/app/user/users/users.component.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around start\\\" class=\\\"container-top\\\">\\n  <div fxFlex=\\\"60%\\\">\\n    <form [formGroup]=\\\"addValueForm\\\" (ngSubmit)=\\\"add()\\\">\\n      <mat-card>\\n        <mat-card-header>Add User</mat-card-header>\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n          <!--firstName-->\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\n            <mat-label>firstName</mat-label>\\n            <input matInput placeholder=\\\"firstName\\\" formControlName=\\\"firstName\\\">\\n            <mat-icon matSuffix>person</mat-icon>\\n          </mat-form-field>\\n          <!--lastName-->\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\n            <mat-label>lastName</mat-label>\\n            <input matInput placeholder=\\\"lastName\\\" formControlName=\\\"lastName\\\">\\n            <mat-icon matSuffix>person</mat-icon>\\n          </mat-form-field>\\n          <!--email-->\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\n            <mat-label>email</mat-label>\\n            <input matInput placeholder=\\\"email\\\" formControlName=\\\"email\\\">\\n            <mat-icon matSuffix>email</mat-icon>\\n          </mat-form-field>\\n          <!--gender-->\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\n            <mat-label>gender</mat-label>\\n            <input matInput placeholder=\\\"gender\\\" formControlName=\\\"gender\\\">\\n            <mat-icon matSuffix>gender</mat-icon>\\n          </mat-form-field>\\n          <!--username-->\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\n            <mat-label>username</mat-label>\\n            <input matInput placeholder=\\\"username\\\" formControlName=\\\"username\\\">\\n            <mat-icon matSuffix>person</mat-icon>\\n          </mat-form-field>\\n          <!--password-->\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\n            <mat-label>password</mat-label>\\n            <input matInput type=\\\"password\\\" formControlName=\\\"password\\\">\\n            <mat-icon matSuffix>password</mat-icon>\\n          </mat-form-field>\\n          <!--avatar-->\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\n            <mat-label>avatar</mat-label>\\n            <input matInput placeholder=\\\"avatar\\\" formControlName=\\\"avatar\\\">\\n            <mat-icon matSuffix>person</mat-icon>\\n          </mat-form-field>\\n          <mat-card-actions fxLayout=\\\"column\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">\\n              Submit\\n            </button>\\n          </mat-card-actions>\\n        </mat-card-content>\\n      </mat-card>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../shared/interfaces/user';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  addValueForm: FormGroup = new FormGroup({});\n\n  constructor(private userService: UserService,\n    private router: Router,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.addValueForm = this.formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      email: [''],\n      gender: [''],\n      username: [''],\n      password: [''],\n      avatar: ['']\n    });\n  }\n\n  add(): void {\n    const firstName = this.addValueForm.get('firstName').value;\n    const lastName = this.addValueForm.get('lastName').value;\n    const email = this.addValueForm.get('email').value;\n    const gender = this.addValueForm.get('gender').value;\n    const username = this.addValueForm.get('username').value;\n    const password = this.addValueForm.get('password').value;\n    const avatar = this.addValueForm.get('avatar').value;\n\n    const newUser: User = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      gender: gender,\n      username: username,\n      password: password,\n      avatar: avatar,\n      id: 1\n    };\n\n    this.userService.addUser(newUser)\n      .subscribe(\n        (data: User) => console.log(data),\n        (err: any) => console.log(err),\n        () => this.router.navigate(['/books'])\n      );\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- Card w/ Name, Dropdown for favorite, List w/ book names -->\\n<div fxLayout=\\\"column\\\"\\n     fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxLayout=\\\"row\\\">\\n   <div fxFlex=\\\"50%\\\" fxFlexOffset=\\\"30%\\\">\\n    <h2>User</h2>\\n\\n    <!-- Add to reading -->\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Favorite food\\\">\\n        <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\n            {{food.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <!-- Add favorite -->\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Favorite food\\\">\\n        <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\n            {{food.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-list>\\n      <h4 mat-subheader>Reading List</h4>\\n    <mat-list-item>\\n      <mat-icon mat-list-icon>book</mat-icon>\\n      <h4 mat-line>Title</h4>\\n      <p mat-line class=\\\"top-spacer\\\">Author: </p>\\n      <p mat-line class=\\\"top-spacer\\\">Year: </p>\\n     </mat-list-item>\\n    </mat-list>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!-- Card w/ Name, Dropdown for favorite, Show reading list -->\\n<!-- <div fxLayout=\\\"column\\\"\\n     fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxLayout=\\\"row\\\">\\n   <div fxFlex=\\\"50%\\\" fxFlexOffset=\\\"30%\\\">\\n    <h2>{{user?.name}}</h2>\\n\\n    <form (ngSubmit)=\\\"saveBook(selectedBook)\\\">\\n    <mat-form-field>\\n        <mat-select placeholder=\\\"Add to Reading\\\" [(ngModel)]=\\\"selectedBook\\\" name=\\\"book\\\">\\n          <mat-option *ngFor=\\\"let book of books\\\" [value]=\\\"book.id\\\">{{book.title}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <div class=\\\"button-row\\\" style=\\\"margin-left: 10px;\\\">\\n        <button mat-raised-button\\n                color=\\\"primary\\\"\\n                class=\\\"button-margin-btm\\\">Submit</button>\\n      </div>\\n    </form>\\n\\n    <form (ngSubmit)=\\\"saveFavorite(selectedFav)\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Favorite Book\\\" [(ngModel)]=\\\"selectedFav\\\" name=\\\"book\\\">\\n        <mat-option *ngFor=\\\"let book of books\\\" [value]=\\\"book.title\\\">\\n          {{book.title}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div class=\\\"button-row\\\" style=\\\"margin-left: 10px;\\\">\\n      <button mat-raised-button\\n              color=\\\"primary\\\"\\n              class=\\\"button-margin-btm\\\">Submit</button>\\n      </div>\\n    </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div fxLayout=\\\"row\\\"\\n  fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxFlex=\\\"90%\\\">\\n    <mat-list>\\n      <h4 mat-subheader>Favorite</h4>\\n    <mat-list-item>\\n      <mat-icon mat-list-icon>book</mat-icon>\\n      <h4 mat-line>{{favorite?.title}}</h4>\\n     </mat-list-item>\\n    </mat-list>\\n  </div>\\n</div>\\n\\n<div fxLayout=\\\"row\\\"\\n  fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxFlex=\\\"90%\\\">\\n    <mat-list>\\n      <h4 mat-subheader>Reading List</h4>\\n    <mat-list-item *ngFor=\\\"let reading of readingList\\\">\\n      <mat-icon mat-list-icon>book</mat-icon>\\n      <h4 mat-line>{{reading.title}}</h4>\\n      <p mat-line class=\\\"top-spacer\\\">Author: {{reading.author}}</p>\\n     </mat-list-item>\\n    </mat-list>\\n  </div>\\n</div> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { User } from '../../shared/interfaces/user';\nimport { BookService } from '../../book/book.service';\nimport { Book } from '../../shared/interfaces/book';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n  foods: any = [\n    { value: 'steak-0', viewValue: 'Steak' },\n    { value: 'pizza-1', viewValue: 'Pizza' },\n    { value: 'tacos-2', viewValue: 'Tacos' }\n  ];\n\n  selectedBook: any;\n  selectedFav: any;\n  user: User;\n  readingList: {};\n  books: Book[];\n  favorite: any;\n\n  constructor(private userService: UserService,\n    private bookService: BookService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // const param = +this.route.snapshot.paramMap.get('id');\n    // if (param) {\n    //   console.log(param);\n    //   const id = param;\n    //   this.getUser(id);\n    // }\n    // this.getBooks();\n  }\n\n  getUser(id: number) {\n    this.userService.getUserDetails(id)\n      .subscribe(\n        (results: User) => {\n          this.user = results;\n          this.readingList = {}; // results.Reading;\n          this.favorite = {}; // results.Favorite;\n        }\n      );\n  }\n\n  getBooks() {\n    this.bookService.getBooks()\n      .subscribe(\n        (books: Book[]) => this.books = books\n      );\n  }\n\n  saveBook(bookValue: number): void {\n    const ID: {} = {\n      bookId: bookValue,\n      userId: this.user.id\n    };\n    console.log(ID);\n\n    this.bookService.add(ID)\n      .subscribe(\n        (data: any) => console.log(data),\n        (err: any) => console.log(err),\n        () => {\n          this.selectedBook = { id: -1 };\n          this.getUser(this.user.id);\n        }\n      );\n  }\n\n  saveFavorite(favValue: number): void {\n    const ID: {} = {\n      bookTitle: favValue,\n      userId: this.user.id\n    };\n    console.log(ID);\n\n    this.userService.saveUserFavorite(ID)\n      .subscribe(\n        (data: any) => console.log(data),\n        (err: any) => console.log(err),\n        () => {\n          this.selectedFav = { id: -1 };\n          this.getUser(this.user.id);\n        }\n      );\n  }\n\n  // getUser(id: number) {\n  //   this.userService.getUserDetails(id)\n  //     .subscribe(\n  //       (user: User) => this.user = user\n  //     );\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users/users.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { AddUserComponent } from './add-user/add-user.component';\n\nconst routes: Routes = [{\n  path: '',\n  pathMatch: 'full',\n  component: UsersComponent\n}, {\n  path: 'add-user',\n  pathMatch: 'full',\n  component: AddUserComponent\n}, {\n  path: 'edit-user',\n  // path: ':id',\n  pathMatch: 'full',\n  component: UserEditComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { MaterialModule } from '../shared/material.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { UsersComponent } from './users/users.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { AddUserComponent } from './add-user/add-user.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    SharedModule,\n    UserRoutingModule\n  ],\n  declarations: [UsersComponent, UserEditComponent, AddUserComponent]\n})\nexport class UserModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { User } from '../shared/interfaces/user';\n\n@Injectable({\n providedIn: 'root'\n})\nexport class UserService {\n  private API = 'http://localhost:3000/users';\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<User[]> {\n    return this\n              .http\n              .get<User[]>(`${this.API}`)\n              .pipe(\n                tap(data => console.log(JSON.stringify(data))),\n                catchError(this.handleError)\n              );\n  }\n\n  getUserDetails(id: number): Observable<User> {\n    return this\n              .http\n              .get<User>(`${this.API}/${id}`)\n              .pipe(\n                tap(data => console.log(JSON.stringify(data))),\n                catchError(this.handleError)\n              );\n  }\n\n  addUser(user: User): Observable<User> {\n    return this\n              .http\n              .post<User>(`${this.API}`, user)\n              .pipe(\n                tap(data => console.log(JSON.stringify(data))),\n                catchError(this.handleError)\n              );\n  }\n\n  saveUserFavorite(newFav: {}): Observable<any> {\n    return this\n              .http\n              .put<User>(`${this.API}/saveUserFav`, newFav)\n              .pipe(\n                tap(data => console.log(JSON.stringify(data))),\n                catchError(this.handleError)\n              );\n  }\n\n  private handleError(res: HttpErrorResponse) {\n    console.error(res);\n    return throwError(res.error || 'Server error');\n  }\n\n}\n","module.exports = \".mat-list-icon {\\r\\n  color: rgba(26, 111, 209, 0.54);\\r\\n}\\r\\n\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around start\\\">\\n  <div fxFlex=\\\"90%\\\">\\n    <mat-list>\\n      <h2 mat-subheader>Users</h2>\\n      <mat-list-item *ngFor=\\\"let user of users\\\">\\n        <mat-icon mat-list-icon>account_circle</mat-icon>\\n        <h4 mat-line>{{user.username}}</h4>\\n        <a mat-line [routerLink]=\\\"['/users', user._id]\\\" class=\\\"top-spacer\\\">edit</a>\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User, UserModel } from '../../shared/interfaces/user';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: UserModel[];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.allUsers();\n  }\n\n  allUsers() {\n    this.userService.getUsers()\n      .subscribe(\n        (res: any) => this.users = res.data\n      );\n  }\n\n}\n"],"sourceRoot":""}